{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAUC,SAASC,cAAe,uBAClCC,EAASF,SAASC,cAAe,sBACjCE,EAAWH,SAASC,cAAe,wBAsBzC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OACS,IAAIC,QADTH,EACiB,SAAAI,GACjBC,YAAW,W,OAAMD,EAAQ,CAACN,WAAUC,S,GAASA,E,EAG5B,SAACK,EAASE,GAC3BD,YAAW,W,OAAMC,EAAO,CAACR,WAAUC,S,GAASA,E,GA7BhCN,SAASC,cAAe,yBAEhCa,iBAAiB,SAAS,SAACC,GACnCA,EAAMC,iBAKJ,IAJA,IAAMC,EAASC,SAASf,EAASgB,OAC3BC,EAAOF,SAAShB,EAAOiB,OACvBE,EAAaH,SAASnB,EAAQoB,OAE5BG,EAAM,EAAGA,GAAOL,EAAQK,IAE9BlB,EAAckB,EAAKD,EAAaD,GAAQE,EAAM,IAC3CC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst delayEl = document.querySelector(`input[name=\"delay\"]`)\nconst stepEl = document.querySelector(`input[name=\"step\"]`)\nconst amountEl = document.querySelector(`input[name=\"amount\"]`)\nconst submitBtn = document.querySelector(`button[type=\"submit\"]`)\n\nsubmitBtn.addEventListener(\"click\", (event) => {\n  event.preventDefault()\n    const amount = parseInt(amountEl.value)\n    const step = parseInt(stepEl.value)\n    const basicDelay = parseInt(delayEl.value)\n\n    for(let pos = 1; pos <= amount; pos++){\n     \n      createPromise(pos, basicDelay + step * (pos - 1))\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n)\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return new Promise(resolve => {\n      setTimeout(() => resolve({position, delay}), delay);\n    });\n  } else {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => reject({position, delay}), delay);\n    });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delayEl","document","querySelector","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","setTimeout","reject","addEventListener","event","preventDefault","amount","parseInt","value","step","basicDelay","pos","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.76b227db.js.map"}